USE vit;

SHOW TABLES;

SELECT * FROM staff1;

DESC staff1;

CREATE TABLE employee (
    emp_id INT PRIMARY KEY,
    fname VARCHAR(50),
    lname VARCHAR(50),
    pay INT,
    hire_date DATETIME,
    dept VARCHAR(50)
);

INSERT INTO employee VALUES
(101, 'Anjali', 'Mehra', 120000, '2015-03-10 09:00:00', 'HR'),
(102, 'Rohit', 'Sharma', 95000, '2016-05-15 09:00:00', 'Admin'),
(103, 'Sneha', 'Gupta', 110000, '2017-01-20 09:00:00', 'Finance'),
(104, 'Karan', 'Patel', 70000, '2015-09-30 09:00:00', 'IT'),
(105, 'Neha', 'Kapoor', 130000, '2018-07-22 09:00:00', 'HR'),
(106, 'Arjun', 'Mehta', 80000, '2019-11-12 09:00:00', 'Finance'),
(107, 'Pooja', 'Singh', 85000, '2020-04-05 09:00:00', 'Admin'),
(108, 'Raj', 'Malhotra', 99000, '2021-08-16 09:00:00', 'IT');

-- Basic SELECT operations
SELECT * FROM staff1 WHERE emp_id IN (1, 2);
SELECT * FROM staff1 WHERE emp_id NOT IN (1, 2);

-- Salary filtering
SELECT * FROM staff1 WHERE pay BETWEEN 100000 AND 200000;
SELECT * FROM staff1 WHERE pay NOT BETWEEN 100000 AND 200000;
SELECT * FROM staff1 WHERE pay BETWEEN 100000 AND 300000 AND (emp_id IN (1, 2, 3, 4));

-- Aggregate queries
SELECT MIN(pay) FROM staff1;
SELECT MAX(pay) FROM staff1;
SELECT SUM(pay) FROM staff1;
SELECT AVG(pay) FROM staff1;

-- Subquery
SELECT * FROM staff1 WHERE pay = (SELECT MIN(pay) FROM staff1);

-- Group by
SELECT dept, SUM(pay) AS total_pay
FROM staff1
GROUP BY dept
HAVING SUM(pay) > 100000;

-- DISTINCT and UNION
SELECT DISTINCT(dept) FROM staff1;
SELECT dept FROM employee
UNION
SELECT dept FROM staff1;

SELECT dept FROM employee
UNION ALL
SELECT dept FROM staff1;

-- UNION with full row data
SELECT * FROM staff1 WHERE emp_id IN (1,2,3)
UNION 
SELECT * FROM employee WHERE emp_id IN (101,102,103);

-- ORDER BY examples
SELECT * FROM staff1 WHERE pay <= 200000 ORDER BY pay;
SELECT * FROM staff1 WHERE pay <= 200000 ORDER BY pay DESC;

-- Pattern matching
SELECT * FROM staff1 WHERE fname LIKE '_i%l';
SELECT * FROM staff1 WHERE fname LIKE '__i%';
SELECT * FROM staff1 WHERE fname LIKE '%a_a';
SELECT * FROM staff1 WHERE fname LIKE '_aa%';
SELECT * FROM staff1 WHERE fname LIKE 'M%' OR fname LIKE 'N%';

-- VIEW creation
CREATE VIEW admin_group AS SELECT * FROM staff1 WHERE dept = 'Admin' AND pay < 100000;
CREATE OR REPLACE VIEW admin_group AS SELECT * FROM staff1 WHERE dept = 'Admin' AND pay > 200000;
SELECT * FROM admin_group;
DROP VIEW admin_group;

-- CASE statement
SELECT fname, pay,
CASE
    WHEN pay > 300000 THEN "Rich people"
    WHEN pay <= 300000 AND pay >= 100000 THEN "MIDDLE CLASS"
    WHEN pay < 100000 AND pay >= 0 THEN "POOR CLASS"
    ELSE "Data not found"
END AS salary_status
FROM employee;

SELECT * FROM employee;

-- Product and Order tables
CREATE TABLE items (
    item_id INT PRIMARY KEY,
    item_name VARCHAR(100),
    supplier_id INT,
    category_id INT,
    unit_desc VARCHAR(50),
    unit_price DECIMAL(10, 2)
);

INSERT INTO items VALUES
(1, 'Chais', 1, 1, '10 boxes x 20 bags', 18.00),
(2, 'Chang', 1, 1, '24 - 12 oz bottles', 19.00),
(3, 'Aniseed Syrup', 1, 2, '12 - 550 ml bottles', 10.00),
(4, 'Chef Anton''s Cajun Seasoning', 1, 2, '48 - 6 oz jars', 22.00),
(5, 'Chef Anton''s Gumbo Mix', 1, 2, '36 boxes', 21.35);

CREATE TABLE purchase_orders (
    order_id INT PRIMARY KEY,
    cust_id INT,
    emp_incharge_id INT,
    order_date DATE,
    shipper_id INT
);

INSERT INTO purchase_orders VALUES
(10248, 90, 5, '1996-07-04', 3),
(10249, 81, 6, '1996-07-05', 1),
(10250, 34, 4, '1996-07-08', 2),
(10251, 84, 3, '1996-07-09', 1),
(10252, 76, 4, '1996-07-10', 2);
