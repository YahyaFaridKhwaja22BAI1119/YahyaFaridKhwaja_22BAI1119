package crud_operation;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Scanner;
import com.mysql.cj.jdbc.result.ResultSetMetaData;

public class CRUD_operation {

    public static void main(String[] args) {
        CRUD_operation app = new CRUD_operation();
        Scanner input = new Scanner(System.in);
        System.out.println("Enter the number of students to insert: ");
        int totalStudents = input.nextInt();
        for (int i = 0; i < totalStudents; i++) {
            System.out.print("Enter student ID: ");
            int studentId = input.nextInt();
            input.nextLine();
            System.out.print("Enter the student's name: ");
            String studentName = input.nextLine();
            app.insertStudent(studentId, studentName);
        }
        app.displayAll();
        app.searchStudentById();
        app.modifyStudent(104, 113, "Yahya");
        app.displayAll();
        app.addAgeColumn();
        app.showTableStructure();
        System.out.println("Enter the student ID to delete: ");
        int deleteId = input.nextInt();
        input.nextLine();
        app.removeStudent(deleteId);
        input.close();
    }

    public void insertStudent(int id, String name) {
        DB_connection db = new DB_connection();
        Connection conn = db.get_connection();
        PreparedStatement stmt = null;
        try {
            String query = "insert into student values (?,?)";
            stmt = conn.prepareStatement(query);
            stmt.setInt(1, id);
            stmt.setString(2, name);
            System.out.println(stmt);
            stmt.executeUpdate();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void displayAll() {
        DB_connection db = new DB_connection();
        Connection conn = db.get_connection();
        PreparedStatement stmt = null;
        ResultSet rs = null;
        try {
            String query = "SELECT * FROM student";
            stmt = conn.prepareStatement(query);
            rs = stmt.executeQuery();
            ResultSetMetaData meta = (ResultSetMetaData) rs.getMetaData();
            int colCount = meta.getColumnCount();
            System.out.println("Student Table Data:");
            while (rs.next()) {
                for (int i = 1; i <= colCount; i++) {
                    Object val = rs.getObject(i);
                    System.out.print(val + "\t");
                }
                System.out.println();
            }
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }

    public void searchStudentById() {
        DB_connection db = new DB_connection();
        Connection conn = db.get_connection();
        PreparedStatement stmt = null;
        ResultSet rs = null;
        Scanner input = new Scanner(System.in);
        try {
            System.out.print("Enter SL_NO to search: ");
            int id = input.nextInt();
            String query = "SELECT * FROM student WHERE s_id = ?";
            stmt = conn.prepareStatement(query);
            stmt.setInt(1, id);
            rs = stmt.executeQuery();
            ResultSetMetaData meta = (ResultSetMetaData) rs.getMetaData();
            int colCount = meta.getColumnCount();
            System.out.println("\nSearch Result:");
            boolean found = false;
            while (rs.next()) {
                found = true;
                for (int i = 1; i <= colCount; i++) {
                    Object val = rs.getObject(i);
                    System.out.print(val + "\t");
                }
                System.out.println();
            }
            if (!found) {
                System.out.println("No record found with SL_NO: " + id);
            }
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }

    public void modifyStudent(int oldId, int newId, String name) {
        DB_connection db = new DB_connection();
        Connection conn = db.get_connection();
        PreparedStatement stmt = null;
        try {
            String query = "update student set s_id =? , s_name =? where s_id =? ";
            stmt = conn.prepareStatement(query);
            stmt.setInt(1, newId);
            stmt.setString(2, name);
            stmt.setInt(3, oldId);
            System.out.println(stmt);
            stmt.executeUpdate();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void addAgeColumn() {
        DB_connection db = new DB_connection();
        Connection conn = db.get_connection();
        PreparedStatement stmt = null;
        try {
            String query = "ALTER TABLE student ADD age INT";
            stmt = conn.prepareStatement(query);
            stmt.executeUpdate();
            System.out.println("Column 'age' added successfully to student table.");
        } catch (Exception e) {
            System.out.println("Error (maybe column already exists): " + e);
        }
    }

    public void showTableStructure() {
        DB_connection db = new DB_connection();
        Connection conn = db.get_connection();
        PreparedStatement stmt = null;
        ResultSet rs = null;
        try {
            String query = "DESCRIBE student";
            stmt = conn.prepareStatement(query);
            rs = stmt.executeQuery();
            System.out.println("\nTable Structure (DESCRIBE student):");
            System.out.println("Field\tType\tNull\tKey\tDefault\tExtra");
            while (rs.next()) {
                for (int i = 1; i <= 6; i++) {
                    Object val = rs.getObject(i);
                    System.out.print(val + "\t");
                }
                System.out.println();
            }
        } catch (Exception e) {
            System.out.println("Error describing table: " + e);
        }
    }

    public void removeStudent(int id) {
        DB_connection db = new DB_connection();
        Connection conn = db.get_connection();
        PreparedStatement stmt = null;
        try {
            String query = "delete from student where s_id=?";
            stmt = conn.prepareStatement(query);
            stmt.setInt(1, id);
            System.out.println(stmt);
            stmt.executeUpdate();
        } catch (Exception e) {
            System.out.println(e);
        }
    }
}
